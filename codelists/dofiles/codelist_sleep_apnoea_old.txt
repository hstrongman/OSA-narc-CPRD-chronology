<<dd_version: 2>>
<<dd_include: header.txt>>

Description of how the sleep apnoea code lists were created
===============================================================

Next steps:
6a. Think about who will read these files and what they might need
6b. Make text and related do file clearer including noting above problems, and 
	instructions for changing the code list, write a project conventions file 
	(e.g. _ = temporary variable)

~~~~

<<dd_do:quietly>>
use "`2'", clear

if "`1'" == "aurum" {
	destring observations, replace
	gen _observations = observations
	rename cleansedreadcode readcode
	}
if "`1'" == "gold" {
	egen _observations = rowtotal(clinevents refevents testevents imevents)
	rename readterm term
	}
if "`1'" == "hesapc" {
	gen _observations = .
	rename description term
	rename code ICD /*ICD matches HES APC data dictionary*/
	}
	

gen _term_lower = lower(term)
generate _marker=.
local interms "apnoea apnea OSA"
local inchaps "H5B R005 Fy03"
local exterms "mosaic mask questionnaire clinic appliance treatment monitoring recording assessment operation"
<</dd_do>>


## BASIC SEARCH
~~~~

<<dd_do: nocommands>>
display "Inclusion terms: `interms'"
display "Inclusion chapters: `inchaps'"
display "Exclusion chapters: `exterms'"
<</dd_do>>

Note: Care pathway terms excluded because they are rarely used and mostly indicate
testing for sleep apnoea

~~~~


<<dd_do:quietly>>

foreach word of local interms {
	replace _marker = 1 if strmatch(term, "*`word'*")
	replace _marker = 1 if strmatch(_term_lower, "*`word'*")
	}

if "`1'" == "gold" | "`1'" == "aurum" {
	foreach chap of local inchaps {
		replace _marker = 1 if strmatch(readcode, "`chap'*")
		}
	}

keep if _marker == 1

foreach word of local exterms {
	replace _marker = 0 if strmatch(_term_lower, "*`word'*")
	}

<</dd_do>> 

## CODE LIST SPECIFIC SEARCH CRITERIA

~~~~
All terms should include "sleep" & "apnoea" or "apnea"

<<dd_do:quietly>>
replace _marker = 0 if !strmatch(_term_lower, "*sleep*")
replace _marker = 0 if !strmatch(_term_lower, "*apnoea*") & !strmatch(_term_lower, "*apnea*")
<</dd_do>>

~~~~
## CHECK EXCLUDED CODES

<<dd_do: nocommands>>
list term if _marker == 0, noobs table
<</dd_do>>


## CREATE CATEGORIES
~~~~

<<dd_do:quietly>>
pause on
drop if _marker == 0
gen category = 0
label define categorylab 1 "Obstructive Sleep Apnoea" 2 "Obstructive sleep apnoea syndrome" 3 "Sleep apnoea NOS" 4 "Sleep apnoea syndrome NOS" 5 "Central sleep apnoea" 6 "Primary sleep apnoea"
<</dd_do>>

1: Obstructive Sleep Apnoea
This category includes terms including the strings "obstructive" or "mixed" but not "syndrome"

<<dd_do:quietly>>
replace category = 1 if strmatch(_term_lower, "*obstructive*") & !strmatch(_term_lower, "*syndrome*")
replace category = 1 if strmatch(_term_lower, "*mixed*") & !strmatch(_term_lower, "*syndrome*")
<</dd_do>>

2: Obstructive Sleep Apnoea Syndrome
This category includes terms including "obstructive" or "mixed" and "syndrome"

<<dd_do:quietly>>
replace category = 2 if strmatch(_term_lower, "*obstructive*") & strmatch(_term_lower, "*syndrome*")
replace category = 2 if strmatch(_term_lower, "*mixed*") & strmatch(_term_lower, "*syndrome*")
replace category = 1 if category == 2 & strmatch(_term_lower, "*dysmorphism syndrome*")
<</dd_do>>

5. Central sleep apnoea
This category includes terms including the string "central"

<<dd_do:quietly>>
local specterms = "central"
foreach word of local specterms {
	replace category = 5 if strmatch(_term_lower, "*`word'*")
}
<</dd_do>>

6. Primary sleep apnoea
This category includes terms including the string "primary"

<<dd_do:quietly>>
local specterms = "primary"
foreach word of local specterms {
	replace category = 6 if strmatch(_term_lower, "*`word'*")
}
<</dd_do>>

4. Sleep apnoea syndrome NOS
This category includes terms that have not been classified and include the string "syndrome"

<<dd_do:quietly>>
replace category = 4 if category == 0 & strmatch(_term_lower, "*syndrome*")
<</dd_do>>

3. sleep apnoea NOS
This category includes terms that have not been classified

<<dd_do:quietly>>
replace category = 3 if category == 0
<</dd_do>>
~~~~

## CHECK INCLUDED CODES AND CATEGORISATION
~~~~
<<dd_do:quietly>>
gsort category -_observations
<</dd_do>>

~~~~
## Codes by categorylab
~~~~
<<dd_do: nocommands>>
list category term _observations, noobs sepby(category)
<</dd_do>>

~~~~




## Number of observations per category

~~~~
<<dd_do: quietly>>
quietly preserve
quietly collapse (sum) _observations, by(category)
<</dd_do>>

<<dd_do: nocommands>>
list
<</dd_do>>

<<dd_do: quietly>>
list
quietly restore
<</dd_do>>

~~~~

## Compare with previous version

~~~~

<<dd_do: quietly>>
preserve
rename category _categorynew
label variable _categorynew "Category in new codelist"

local source = "`1'"
merge 1:1 `3' using "$olddir\cr_codelist_apnoea_`source'"
gen _comparison = _merge

label define _comparisonlab 1 "New only" 2 "Old only" 3 "Both"
label values _comparison _comparisonlab
label variable _comparison "Comparison of old and updated code list"

rename category _categoryold
label variable _categoryold "Category in old codelist"
label copy categorylab categorylabold
label define categorylabold 5 "Sleep apnoea (other specified)" 6 "Care pathway", modify 
label values _categoryold categorylabold

gsort _comparison _categorynew _categoryold -_observations
<</dd_do>>

<<dd_do: nocommands>>
tab _comparison
*Number of codes in the new codelist that weren't in the old code list
count if _comparison == 1

*These are listed below:
list term _categorynew _categoryold _observations if _comparison == 1, noobs table

*Number of codes in the old codelist that aren't in the old code list
count if _comparison == 2

*These are listed below:
list term _categorynew _categoryold _observations if _comparison == 2, noobs table

*Number of codes that are in both codelist but in different categories:
count if _comparison == 3 & _categorynew != _categoryold

*These are listed below:
list term _categorynew _categoryold _observations if ///
_comparison == 3 & _categorynew != _categoryold, noobs table

<</dd_do>>

<<dd_do: quietly>>
drop _*
export delimited using "$datadir_text\codelist_apnoea_`1'.txt", replace delimiter(tab)
keep <<dd_display: "`3'">> term
save "$datadir_stata\codelist_sleep_apnoea_`1'.dta", replace
<</dd_do>>

~~~~




